# name: Create Release

# on:
#   push:
#     tags:
#       - 'v*'  # Trigger the workflow on version tag push (e.g., v1.0.0)
#     branches:
#       - main

# jobs:
#   release:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout the repository
#         uses: actions/checkout@v3

#       - name: Set up Node.js (if you're building a Node.js app)
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'

#       - name: Install dependencies (if needed)
#         run: npm install

#       - name: Build the application
#         run: npm run build  # This should generate your /dist folder

#       - name: Create GitHub Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: ${{ github.ref }}
#           release_name: Release ${{ github.ref }}
#           draft: false
#           prerelease: false
          
#       - name: Upload Release Assets
#         uses: actions/upload-release-asset@v1
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: ./dist/*.exe
#           asset_name: Sony Bravia Remote Control Setup 1.0.0.exe
#           asset_content_type: application/zip

name: Create Release

on:
  push:
    tags:
      - 'v*'  # Trigger only on tag pushes (e.g., v1.0.0)

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Node.js (if you're building a Node.js app)
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies (if needed)
        run: npm install

      - name: Build the application
        run: npm run build  # This should generate your /dist folder

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}  # Extract only the tag name (e.g., v1.0.0)
          release_name: Release ${{ github.ref_name }}  # Name the release based on the tag
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/*.exe  # Replace with the path to your file
          asset_name: Sony Bravia Remote Control Setup 1.0.0.exe  # Replace with your asset name
          asset_content_type: application/zip

